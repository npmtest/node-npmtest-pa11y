{"/home/travis/build/npmtest/node-npmtest-pa11y/test.js":"/* istanbul instrument in package npmtest_pa11y */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-pa11y/lib.npmtest_pa11y.js":"/* istanbul instrument in package npmtest_pa11y */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_pa11y = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_pa11y = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-pa11y/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-pa11y && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_pa11y */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_pa11y\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_pa11y.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_pa11y.rollup.js'] =\n            local.assetsDict['/assets.npmtest_pa11y.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_pa11y.__dirname + '/lib.npmtest_pa11y.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-pa11y/node_modules/pa11y/lib/pa11y.js":"'use strict';\n\nvar buildAction = require('./action');\nvar once = require('once');\nvar async = require('async');\nvar extend = require('node.extend');\nvar lowercase = require('lower-case');\nvar pkg = require('../package.json');\nvar path = require('path');\nvar truffler = require('truffler');\nvar trufflerPkg = require('truffler/package.json');\nvar phantomjsPath = require('phantomjs-prebuilt').path;\n\nmodule.exports = pa11y;\nmodule.exports.validateAction = buildAction.isValidAction;\nmodule.exports.defaults = {\n\tactions: [],\n\tbeforeScript: null,\n\thideElements: null,\n\thtmlcs: path.join(__dirname, '/vendor/HTMLCS.js'),\n\tignore: [],\n\tlog: {\n\t\tbegin: /* istanbul ignore next */ function() {},\n\t\tdebug: /* istanbul ignore next */ function() {},\n\t\terror: /* istanbul ignore next */ function() {},\n\t\tinfo: /* istanbul ignore next */ function() {},\n\t\tresults: /* istanbul ignore next */ function() {}\n\t},\n\tpage: {\n\t\tsettings: {\n\t\t\tuserAgent: 'pa11y/' + pkg.version + ' (truffler/' + trufflerPkg.version + ')'\n\t\t}\n\t},\n\tphantom: {\n\t\tonStdout: /* istanbul ignore next */ function() {},\n\t\tparameters: {\n\t\t\t'ignore-ssl-errors': 'true'\n\t\t},\n\t\tpath: phantomjsPath\n\t},\n\trootElement: null,\n\trules: [],\n\tscreenCapture: null,\n\tstandard: 'WCAG2AA',\n\tallowedStandards: ['Section508', 'WCAG2A', 'WCAG2AA', 'WCAG2AAA'],\n\twait: 0,\n\tverifyPage: null\n};\n\nfunction pa11y(options) {\n\toptions = defaultOptions(options);\n\tif (options.allowedStandards.indexOf(options.standard) === -1) {\n\t\tthrow new Error('Standard must be one of ' + options.allowedStandards.join(', '));\n\t}\n\treturn truffler(options, testPage);\n}\n\nfunction defaultOptions(options) {\n\toptions = extend(true, {}, module.exports.defaults, options);\n\toptions.ignore = options.ignore.map(lowercase);\n\treturn options;\n}\n\nfunction testPage(browser, page, options, done) {\n\n\tpage.onCallback = once(function(result) {\n\t\tif (result instanceof Error) {\n\t\t\treturn done(result);\n\t\t}\n\t\tif (result.error) {\n\t\t\treturn done(new Error(result.error));\n\t\t}\n\t\toptions.log.debug('Document title: \"' + result.documentTitle + '\"');\n\n\t\t// Generate a screen capture\n\t\tif (options.screenCapture) {\n\t\t\toptions.log.info('Capturing screen, saving to \"' + options.screenCapture + '\"');\n\t\t\treturn page.render(options.screenCapture, function(error) {\n\t\t\t\tif (error) {\n\t\t\t\t\toptions.log.error('Error capturing screen: ' + error.message);\n\t\t\t\t}\n\t\t\t\tdone(null, result.messages);\n\t\t\t});\n\t\t}\n\n\t\tdone(null, result.messages);\n\t});\n\n\tasync.waterfall([\n\n\t\t// Run beforeScript function\n\t\tfunction(next) {\n\t\t\tif (typeof options.beforeScript !== 'function') {\n\t\t\t\treturn next();\n\t\t\t} else if (options.actions.length) {\n\t\t\t\toptions.log.info('beforeScript cannot be used in combination with actions, ignoring beforeScript');\n\t\t\t\treturn next();\n\t\t\t}\n\t\t\toptions.log.debug('Running beforeScript');\n\t\t\toptions.beforeScript(page, options, next);\n\t\t},\n\n\t\t// Run actions\n\t\tfunction(next) {\n\t\t\tif (!options.actions.length) {\n\t\t\t\treturn next();\n\t\t\t}\n\t\t\toptions.log.info('Running actions');\n\t\t\tvar actions = options.actions.map(function(actionString) {\n\t\t\t\treturn buildAction(browser, page, options, actionString);\n\t\t\t});\n\t\t\tasync.series(actions, function(error) {\n\t\t\t\tif (!error) {\n\t\t\t\t\toptions.log.info('Finished running actions');\n\t\t\t\t}\n\t\t\t\tnext(error);\n\t\t\t});\n\t\t},\n\n\t\t// Inject HTML CodeSniffer\n\t\tfunction(next) {\n\t\t\toptions.log.debug('Injecting HTML CodeSniffer');\n\t\t\tif (/^(https?|file):\\/\\//.test(options.htmlcs)) {\n\t\t\t\t// Include remote URL\n\t\t\t\tpage.includeJs(options.htmlcs, function(error, included) {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treturn next(error);\n\t\t\t\t\t}\n\t\t\t\t\tif (!included) {\n\t\t\t\t\t\treturn next(new Error('Pa11y was unable to include scripts in the page'));\n\t\t\t\t\t}\n\t\t\t\t\tnext();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Inject local file\n\t\t\t\tpage.injectJs(options.htmlcs, function(error, injected) {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treturn next(error);\n\t\t\t\t\t}\n\t\t\t\t\tif (!injected) {\n\t\t\t\t\t\treturn next(new Error('Pa11y was unable to inject scripts into the page'));\n\t\t\t\t\t}\n\t\t\t\t\tnext();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t// Inject Pa11y\n\t\tfunction(next) {\n\t\t\toptions.log.debug('Injecting Pa11y');\n\t\t\tpage.injectJs(path.join(__dirname, '/inject.js'), function(error, injected) {\n\t\t\t\tif (error) {\n\t\t\t\t\treturn next(error);\n\t\t\t\t}\n\t\t\t\tif (!injected) {\n\t\t\t\t\treturn next(new Error('Pa11y was unable to inject scripts into the page'));\n\t\t\t\t}\n\n\t\t\t\tnext();\n\t\t\t});\n\t\t},\n\n\t\t// Run Pa11y on the page\n\t\tfunction(next) {\n\t\t\toptions.log.debug('Running Pa11y on the page');\n\t\t\tif (options.wait > 0) {\n\t\t\t\toptions.log.debug('Waiting for ' + options.wait + 'ms');\n\t\t\t}\n\t\t\tpage.evaluate(function(options) {\n\t\t\t\t/* global injectPa11y: true, window: true */\n\t\t\t\tif (typeof window.callPhantom !== 'function') {\n\t\t\t\t\treturn {\n\t\t\t\t\t\terror: 'Pa11y could not report back to PhantomJS'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tinjectPa11y(window, options, window.callPhantom);\n\t\t\t}, {\n\t\t\t\thideElements: options.hideElements,\n\t\t\t\tignore: options.ignore,\n\t\t\t\trootElement: options.rootElement,\n\t\t\t\tstandard: options.standard,\n\t\t\t\twait: options.wait,\n\t\t\t\tverifyPage: options.verifyPage,\n\t\t\t\trules: options.rules\n\t\t\t}, next);\n\t\t}\n\n\t], function(error, result) {\n\t\t// catch any errors which occur in the injection process\n\t\tif (error) {\n\t\t\tpage.onCallback(error);\n\t\t}\n\t\tif (result && result.error) {\n\t\t\tpage.onCallback(result);\n\t\t}\n\t});\n}\n","/home/travis/build/npmtest/node-npmtest-pa11y/node_modules/pa11y/lib/action.js":"'use strict';\n\nmodule.exports = buildAction;\n\n// This function returns a new function, turning an action string\n// into code that can be used by Pa11y\nfunction buildAction(browser, page, options, actionString) {\n\n\t// Find the first action that matches the given action string\n\tvar actionBuilder = module.exports.allowedActions.find(function(allowedAction) {\n\t\treturn allowedAction.match.test(actionString);\n\t});\n\n\t// Get the action runner, the function that we'll\n\t// actually run on the page\n\tvar actionRunner;\n\tif (actionBuilder) {\n\t\tactionRunner = actionBuilder.build(browser, page, options, actionString.match(actionBuilder.match));\n\t}\n\n\t// Return a function which logs and runs the action\n\treturn function(done) {\n\t\tif (!actionRunner) {\n\t\t\treturn done(new Error('Failed action: \"' + actionString + '\" cannot be resolved'));\n\t\t}\n\t\toptions.log.debug('Running action: ' + actionString);\n\t\tactionRunner(function(error) {\n\t\t\tif (!error) {\n\t\t\t\toptions.log.debug('  ✔︎ action complete');\n\t\t\t}\n\t\t\tdone(error);\n\t\t});\n\t};\n}\n\nmodule.exports.isValidAction = isValidAction;\n\nfunction isValidAction(actionString) {\n\treturn module.exports.allowedActions.some(function(allowedAction) {\n\t\treturn allowedAction.match.test(actionString);\n\t});\n}\n\nmodule.exports.allowedActions = [\n\n\t// Action to click an element\n\t// E.g. \"click .sign-in-button\"\n\t{\n\t\tname: 'click-element',\n\t\tmatch: /^click( element)? (.+)$/i,\n\t\tbuild: function(browser, page, options, matches) {\n\t\t\tvar actionOptions = {\n\t\t\t\tselector: matches[2]\n\t\t\t};\n\n\t\t\treturn function(done) {\n\t\t\t\tpage.evaluate(function(actionOptions) {\n\t\t\t\t\tvar target = document.querySelector(actionOptions.selector);\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\ttarget.click();\n\t\t\t\t\t}\n\t\t\t\t\treturn Boolean(target);\n\t\t\t\t}, actionOptions, function(error, result) {\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\treturn done(new Error('Failed action: no element matching selector \"' + actionOptions.selector + '\"'));\n\t\t\t\t\t}\n\t\t\t\t\tdone();\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\t},\n\n\t// Action to set an input field value\n\t// E.g. \"set field #username to example\"\n\t{\n\t\tname: 'set-field-value',\n\t\tmatch: /^set( field)? (.+) to (.+)$/i,\n\t\tbuild: function(browser, page, options, matches) {\n\t\t\tvar actionOptions = {\n\t\t\t\tselector: matches[2],\n\t\t\t\tvalue: matches[3]\n\t\t\t};\n\n\t\t\treturn function(done) {\n\t\t\t\tpage.evaluate(function(actionOptions) {\n\t\t\t\t\tvar target = document.querySelector(actionOptions.selector);\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\ttarget.value = actionOptions.value;\n\t\t\t\t\t}\n\t\t\t\t\treturn Boolean(target);\n\t\t\t\t}, actionOptions, function(error, result) {\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\treturn done(new Error('Failed action: no element matching selector \"' + actionOptions.selector + '\"'));\n\t\t\t\t\t}\n\t\t\t\t\tdone();\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\t},\n\n\t// Action to check or uncheck a checkbox/radio input\n\t// E.g. \"check field #example\"\n\t// E.g. \"uncheck field #example\"\n\t{\n\t\tname: 'check-field',\n\t\tmatch: /^(check|uncheck)( field)? (.+)$/i,\n\t\tbuild: function(browser, page, options, matches) {\n\t\t\tvar actionOptions = {\n\t\t\t\tchecked: true,\n\t\t\t\tselector: matches[3]\n\t\t\t};\n\t\t\tif (matches[1] === 'uncheck') {\n\t\t\t\tactionOptions.checked = false;\n\t\t\t}\n\n\t\t\treturn function(done) {\n\t\t\t\tpage.evaluate(function(actionOptions) {\n\t\t\t\t\tvar target = document.querySelector(actionOptions.selector);\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\ttarget.checked = actionOptions.checked;\n\t\t\t\t\t}\n\t\t\t\t\treturn Boolean(target);\n\t\t\t\t}, actionOptions, function(error, result) {\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\treturn done(new Error('Failed action: no element matching selector \"' + actionOptions.selector + '\"'));\n\t\t\t\t\t}\n\t\t\t\t\tdone();\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\t},\n\n\t// Action which waits for the URL, path, or fragment to change to the given value\n\t// E.g. \"wait for fragment to be #example\"\n\t// E.g. \"wait for path to be /example\"\n\t// E.g. \"wait for url to be https://example.com/\"\n\t{\n\t\tname: 'wait-for-url',\n\t\tmatch: /^wait for (fragment|hash|path|url)( to (not )?be)? (.+)$/i,\n\t\tbuild: function(browser, page, options, matches) {\n\t\t\tvar actionOptions = {\n\t\t\t\texpectedValue: matches[4],\n\t\t\t\tnegated: matches[3] !== undefined,\n\t\t\t\tsubject: matches[1]\n\t\t\t};\n\n\t\t\tfunction waitForValue(expectedValue, done) {\n\t\t\t\tpage.evaluate(function(actionOptions) {\n\t\t\t\t\t/* eslint complexity: 0 */\n\t\t\t\t\tvar value;\n\t\t\t\t\tswitch (actionOptions.subject) {\n\t\t\t\t\t\tcase 'fragment':\n\t\t\t\t\t\tcase 'hash':\n\t\t\t\t\t\t\tvalue = window.location.hash;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'path':\n\t\t\t\t\t\t\tvalue = window.location.pathname;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'url':\n\t\t\t\t\t\t\tvalue = window.location.href;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// no default behaviour\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}, actionOptions, function(error, result) {\n\t\t\t\t\toptions.log.debug('  … waiting (\"' + result + '\")');\n\t\t\t\t\tif ((result === actionOptions.expectedValue) === !actionOptions.negated) {\n\t\t\t\t\t\tdone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\twaitForValue(actionOptions.expectedValue, done);\n\t\t\t\t\t\t}, 200);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn function(done) {\n\t\t\t\twaitForValue(actionOptions.expectedValue, done);\n\t\t\t};\n\t\t}\n\t}\n\n];\n","/home/travis/build/npmtest/node-npmtest-pa11y/node_modules/pa11y/.eslintrc.js":"'use strict';\n\nmodule.exports = require('pa11y-lint-config/eslint/es5');\n","/home/travis/build/npmtest/node-npmtest-pa11y/node_modules/pa11y/bin/pa11y.js":"#!/usr/bin/env node\n'use strict';\n\nvar extend = require('node.extend');\nvar path = require('path');\nvar pkg = require('../package.json');\nvar program = require('commander');\nvar pa11y = require('../lib/pa11y');\n\nconfigureProgram(program);\nrunProgram(program);\n\nfunction configureProgram(program) {\n\tprogram.version(pkg.version)\n\t\t.usage('[options] <url>')\n\t\t.option(\n\t\t\t'-n, --environment',\n\t\t\t'output details about the environment Pa11y will run in'\n\t\t)\n\t\t.option(\n\t\t\t'-s, --standard <name>',\n\t\t\t'the accessibility standard to use: Section508, WCAG2A, WCAG2AA (default), WCAG2AAA'\n\t\t)\n\t\t.option(\n\t\t\t'-r, --reporter <reporter>',\n\t\t\t'the reporter to use: cli (default), csv, tsv, html, json',\n\t\t\t'cli'\n\t\t)\n\t\t.option(\n\t\t\t'-l, --level <level>',\n\t\t\t'the level of message to fail on (exit with code 2): error, warning, notice',\n\t\t\t'error'\n\t\t)\n\t\t.option(\n\t\t\t'-T, --threshold <number>',\n\t\t\t'permit this number of errors, warnings, or notices, otherwise fail with exit code 2',\n\t\t\t'0'\n\t\t)\n\t\t.option(\n\t\t\t'-i, --ignore <ignore>',\n\t\t\t'types and codes of messages to ignore, a repeatable value or separated by semi-colons',\n\t\t\tcollectOptions,\n\t\t\t[]\n\t\t)\n\t\t.option(\n\t\t\t'-R, --root-element <selector>',\n\t\t\t'a CSS selector used to limit which part of a page is tested'\n\t\t)\n\t\t.option(\n\t\t\t'-E, --hide-elements <hide>',\n\t\t\t'a CSS selector to hide elements from testing, selectors can be comma separated'\n\t\t)\n\t\t.option(\n\t\t\t'-c, --config <path>',\n\t\t\t'a JSON or JavaScript config file',\n\t\t\t'./pa11y.json'\n\t\t)\n\t\t.option(\n\t\t\t'-p, --port <port>',\n\t\t\t'the port to run PhantomJS on'\n\t\t)\n\t\t.option(\n\t\t\t'-t, --timeout <ms>',\n\t\t\t'the timeout in milliseconds'\n\t\t)\n\t\t.option(\n\t\t\t'-w, --wait <ms>',\n\t\t\t'the time to wait before running tests in milliseconds'\n\t\t)\n\t\t.option(\n\t\t\t'-v, --verify-page <string>',\n\t\t\t'HTML string to verify is present in the page source HTML'\n\t\t)\n\t\t.option(\n\t\t\t'-d, --debug',\n\t\t\t'output debug messages'\n\t\t)\n\t\t.option(\n\t\t\t'-H, --htmlcs <url>',\n\t\t\t'the URL or path to source HTML_CodeSniffer from'\n\t\t)\n\t\t.option(\n\t\t\t'-e, --phantomjs <path>',\n\t\t\t'the path to the phantomjs executable'\n\t\t)\n\t\t.option(\n\t\t\t'-S, --screen-capture <path>',\n\t\t\t'a path to save a screen capture of the page to'\n\t\t)\n\t\t.option(\n\t\t\t'-A, --add-rule <rule>',\n\t\t\t'WCAG 2.0 rules to include, a repeatable value or separated by semi-colons',\n\t\t\tcollectOptions,\n\t\t\t[]\n\t\t)\n\t\t.parse(process.argv);\n\tprogram.url = program.args[0];\n}\n\nfunction runProgram(program) {\n\tif (program.environment) {\n\t\toutputEnvironmentInfo();\n\t\tprocess.exit(0);\n\t}\n\tif (!program.url || program.args[1]) {\n\t\tprogram.help();\n\t}\n\tvar options = processOptions(program);\n\toptions.log.begin(program.url);\n\ttry {\n\t\tvar test = pa11y(options);\n\t\ttest.run(program.url, function(error, results) {\n\t\t\tif (error) {\n\t\t\t\toptions.log.error(error.stack);\n\t\t\t\tprocess.exit(1);\n\t\t\t}\n\t\t\tif (reportShouldFail(program.level, results, program.threshold)) {\n\t\t\t\tprocess.once('exit', function() {\n\t\t\t\t\tprocess.exit(2);\n\t\t\t\t});\n\t\t\t}\n\t\t\toptions.log.results(results, program.url);\n\t\t});\n\t} catch (error) {\n\t\toptions.log.error(error.stack);\n\t\tprocess.exit(1);\n\t}\n}\n\nfunction processOptions(program) {\n\tvar options = extend(true, {}, loadConfig(program.config), {\n\t\thideElements: program.hideElements,\n\t\thtmlcs: program.htmlcs,\n\t\tignore: program.ignore,\n\t\tlog: loadReporter(program.reporter),\n\t\tpage: {\n\t\t\tsettings: {\n\t\t\t\tresourceTimeout: program.timeout\n\t\t\t}\n\t\t},\n\t\tphantom: {\n\t\t\tpath: program.phantomjs,\n\t\t\tport: program.port\n\t\t},\n\t\trootElement: program.rootElement,\n\t\trules: program.addRule,\n\t\tscreenCapture: program.screenCapture,\n\t\tstandard: program.standard,\n\t\ttimeout: program.timeout,\n\t\twait: program.wait,\n\t\tverifyPage: program.verifyPage\n\t});\n\n\tif (!program.debug) {\n\t\toptions.log.debug = function() {};\n\t}\n\treturn options;\n}\n\nfunction loadConfig(filePath) {\n\treturn requireFirst([\n\t\tfilePath,\n\t\tfilePath.replace(/^\\.\\//, process.cwd() + '/'),\n\t\tprocess.cwd() + '/' + filePath\n\t], {});\n}\n\nfunction loadReporter(name) {\n\tvar reporter = requireFirst([\n\t\t'../reporter/' + name,\n\t\t'pa11y-reporter-' + name,\n\t\tpath.join(process.cwd(), name)\n\t], null);\n\tif (!reporter) {\n\t\tconsole.error('Reporter \"' + name + '\" could not be found');\n\t\tprocess.exit(1);\n\t}\n\treturn reporter;\n}\n\nfunction requireFirst(stack, defaultReturn) {\n\tif (!stack.length) {\n\t\treturn defaultReturn;\n\t}\n\ttry {\n\t\treturn require(stack.shift());\n\t} catch (error) {\n\t\treturn requireFirst(stack, defaultReturn);\n\t}\n}\n\nfunction reportShouldFail(level, results, threshold) {\n\tif (level === 'none') {\n\t\treturn false;\n\t}\n\tif (level === 'notice') {\n\t\treturn (results.length > threshold);\n\t}\n\tif (level === 'warning') {\n\t\treturn (results.filter(isWarningOrError).length > threshold);\n\t}\n\treturn (results.filter(isError).length > threshold);\n}\n\nfunction isError(result) {\n\treturn (result.type === 'error');\n}\n\nfunction isWarningOrError(result) {\n\treturn (result.type === 'warning' || result.type === 'error');\n}\n\nfunction collectOptions(val, array) {\n\treturn array.concat(val.split(';'));\n}\n\nfunction outputEnvironmentInfo() {\n\tvar versions = {\n\t\tpa11y: pkg.version,\n\t\tnode: process.version.replace('v', ''),\n\t\tnpm: '[unavailable]',\n\t\tphantom: require('phantomjs-prebuilt').version,\n\t\tos: require('os').release()\n\t};\n\ttry {\n\t\tversions.npm = require('child_process').execSync('npm -v').toString().trim();\n\t} catch (error) {}\n\n\tconsole.log('Pa11y:      ' + versions.pa11y);\n\tconsole.log('Node.js:    ' + versions.node);\n\tconsole.log('npm:        ' + versions.npm);\n\tconsole.log('PhantomJS:  ' + versions.phantom);\n\tconsole.log('OS:         ' + versions.os + ' (' + process.platform + ')');\n}\n","/home/travis/build/npmtest/node-npmtest-pa11y/node_modules/pa11y/reporter/cli.js":"'use strict';\n\nvar chalk = require('chalk');\n\nvar start = chalk.cyan(' > ');\nvar typeStarts = {\n\terror: chalk.red(' • Error: '),\n\tnotice: chalk.cyan(' • Notice: '),\n\tunknown: chalk.grey(' • '),\n\twarning: chalk.yellow(' • Warning: ')\n};\n\nmodule.exports = {\n\tbegin: reportBegin,\n\terror: reportError,\n\tdebug: reportDebug,\n\tinfo: reportInfo,\n\tresults: reportResults,\n\tprocess: emptyFunction\n};\n\nfunction emptyFunction() {}\n\nfunction reportBegin() {\n\tconsole.log(chalk.cyan.underline('Welcome to Pa11y'));\n\tconsole.log('');\n}\n\nfunction reportError(message) {\n\tif (/^error:/i.test(message)) {\n\t\tconsole.error(message);\n\t} else {\n\t\tconsole.error(start + chalk.red('Error: ' + message));\n\t}\n}\n\nfunction reportDebug(message) {\n\tconsole.log(start + chalk.gray('Debug: ' + message));\n}\n\nfunction reportInfo(message) {\n\tconsole.log(start + message);\n}\n\nfunction reportResults(results, url) {\n\tconsole.log('\\n' + chalk.underline('Results for ' + url + ':'));\n\tif (results.length === 0) {\n\t\treturn console.log('\\n' + chalk.green('No errors found!') + '\\n');\n\t}\n\tresults.forEach(reportResult);\n\tconsole.log('');\n\treportTotals(results);\n}\n\nfunction reportResult(result) {\n\tconsole.log(\n\t\t'\\n' +\n\t\t(typeStarts[result.type]) + result.message +\n\t\t'\\n' +\n\t\tchalk.grey('   ├── ' + result.code) +\n\t\t'\\n' +\n\t\tchalk.grey('   ├── ' + result.selector.replace(/\\s+/g, ' ')) +\n\t\t'\\n' +\n\t\tchalk.grey('   └── ' + result.context.replace(/\\s+/g, ' '))\n\t);\n}\n\nfunction reportTotals(results) {\n\tvar totalErrors = results.filter(isError).length;\n\tvar totalNotices = results.filter(isNotice).length;\n\tvar totalWarnings = results.filter(isWarning).length;\n\tconsole.log(\n\t\tchalk.red(totalErrors + ' Errors') +\n\t\t'\\n' +\n\t\tchalk.yellow(totalWarnings + ' Warnings') +\n\t\t'\\n' +\n\t\tchalk.cyan(totalNotices + ' Notices') +\n\t\t'\\n'\n\t);\n}\n\nfunction isError(result) {\n\treturn (result.type === 'error');\n}\n\nfunction isNotice(result) {\n\treturn (result.type === 'notice');\n}\n\nfunction isWarning(result) {\n\treturn (result.type === 'warning');\n}\n","/home/travis/build/npmtest/node-npmtest-pa11y/node_modules/pa11y/lib/inject.js":"'use strict';\n\n/* eslint-disable max-statements, complexity */\nfunction injectPa11y(window, options, done) {\n\tif (options.verifyPage) {\n\t\tvar windowHtml = window.document.documentElement.outerHTML;\n\t\tif (!windowHtml.match(new RegExp(options.verifyPage))) {\n\t\t\treturn reportError('Page not verified - HTML did not contain: \"' + options.verifyPage + '\"');\n\t\t}\n\t}\n\n\tif (options.rules.length > 0 && options.standard !== 'Section508') {\n\t\t/* eslint no-plusplus: 0 */\n\t\tfor (var rule = 0; rule < options.rules.length; ++rule) {\n\t\t\tif (window.HTMLCS_WCAG2AAA.sniffs.indexOf(options.rules[rule]) > -1) {\n\t\t\t\twindow['HTMLCS_' + options.standard.toString()].sniffs[0].include.push(options.rules[rule]);\n\t\t\t} else {\n\t\t\t\treturn reportError(options.rules[rule] + ' is not a valid WCAG 2.0 rule');\n\t\t\t}\n\t\t}\n\t}\n\n\tvar messageTypeMap = {\n\t\t1: 'error',\n\t\t2: 'warning',\n\t\t3: 'notice'\n\t};\n\n\tsetTimeout(runCodeSniffer, options.wait);\n\n\n\tfunction runCodeSniffer() {\n\t\ttry {\n\t\t\twindow.HTMLCS.process(options.standard, window.document, onCodeSnifferComplete);\n\t\t} catch (error) {\n\t\t\treportError('HTML CodeSniffer: ' + error.message);\n\t\t}\n\t}\n\n\tfunction onCodeSnifferComplete() {\n\t\tdone({\n\t\t\tmessages: processMessages(window.HTMLCS.getMessages()),\n\t\t\tdocumentTitle: window.document.title || ''\n\t\t});\n\t}\n\n\tfunction processMessages(messages) {\n\t\tif (options.rootElement) {\n\t\t\tmessages = messages.filter(isMessageInTestArea);\n\t\t}\n\n\t\tif (options.hideElements) {\n\t\t\tmessages = messages.filter(isElementOutsideHiddenArea);\n\t\t}\n\n\t\treturn messages.map(processMessage).filter(isMessageWanted);\n\t}\n\n\tfunction processMessage(message) {\n\t\treturn {\n\t\t\tcode: message.code,\n\t\t\tcontext: processMessageHtml(message.element),\n\t\t\tmessage: message.msg,\n\t\t\ttype: (messageTypeMap[message.type] || 'unknown'),\n\t\t\ttypeCode: message.type,\n\t\t\tselector: getCssSelectorForElement(message.element)\n\t\t};\n\t}\n\n\tfunction processMessageHtml(element) {\n\t\tvar outerHTML = null;\n\t\tvar innerHTML = null;\n\t\tif (!element.outerHTML) {\n\t\t\treturn outerHTML;\n\t\t}\n\t\touterHTML = element.outerHTML;\n\t\tif (element.innerHTML.length > 31) {\n\t\t\tinnerHTML = element.innerHTML.substr(0, 31) + '...';\n\t\t\touterHTML = outerHTML.replace(element.innerHTML, innerHTML);\n\t\t}\n\t\tif (outerHTML.length > 251) {\n\t\t\touterHTML = outerHTML.substr(0, 250) + '...';\n\t\t}\n\t\treturn outerHTML;\n\t}\n\n\tfunction getCssSelectorForElement(element, selectorParts) {\n\t\tselectorParts = selectorParts || [];\n\t\tif (isElementNode(element)) {\n\t\t\tvar identifier = buildElementIdentifier(element);\n\t\t\tselectorParts.unshift(identifier);\n\t\t\tif (!element.id && element.parentNode) {\n\t\t\t\treturn getCssSelectorForElement(element.parentNode, selectorParts);\n\t\t\t}\n\t\t}\n\t\treturn selectorParts.join(' > ');\n\t}\n\n\tfunction buildElementIdentifier(element) {\n\t\tif (element.id) {\n\t\t\treturn '#' + element.id;\n\t\t}\n\t\tvar identifier = element.tagName.toLowerCase();\n\t\tif (!element.parentNode) {\n\t\t\treturn identifier;\n\t\t}\n\t\tvar siblings = getSiblings(element);\n\t\tvar childIndex = siblings.indexOf(element);\n\t\tif (!isOnlySiblingOfType(element, siblings) && childIndex !== -1) {\n\t\t\tidentifier += ':nth-child(' + (childIndex + 1) + ')';\n\t\t}\n\t\treturn identifier;\n\t}\n\n\tfunction getSiblings(element) {\n\t\treturn Array.prototype.slice.call(element.parentNode.childNodes).filter(isElementNode);\n\t}\n\n\tfunction isOnlySiblingOfType(element, siblings) {\n\t\tvar siblingsOfType = siblings.filter(function(sibling) {\n\t\t\treturn (sibling.tagName === element.tagName);\n\t\t});\n\t\treturn (siblingsOfType.length <= 1);\n\t}\n\n\tfunction isElementNode(element) {\n\t\treturn (element.nodeType === 1);\n\t}\n\n\tfunction isMessageInTestArea(message) {\n\t\tvar rootElement = window.document.querySelector(options.rootElement);\n\n\t\tif (rootElement) {\n\t\t\treturn isElementWithinTestArea(message.element, rootElement);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction isElementOutsideHiddenArea(message) {\n\t\tvar hiddenSelectors = options.hideElements.split(',');\n\t\tvar element = message.element;\n\t\tvar elementsWithinHiddenSelectors = hiddenSelectors.filter(function(selector) {\n\t\t\treturn hiddenAreasContainsElement(element, selector);\n\t\t});\n\n\t\t/* eslint no-unneeded-ternary: 'off' */\n\t\treturn (elementsWithinHiddenSelectors.length ? false : true);\n\t}\n\n\tfunction isElementWithinTestArea(child, parent) {\n\t\tvar node = child.parentNode;\n\t\twhile (node !== null) {\n\t\t\tif (node === parent) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tnode = node.parentNode;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction hiddenAreasContainsElement(element, hiddenSelectors) {\n\t\t/* eslint complexity:[\"error\", 5], max-depth:[\"error\", 3] */\n\t\tvar hiddenElements = window.document.querySelectorAll(hiddenSelectors);\n\n\t\tfor (var i = 0; i < hiddenElements.length; i += 1) {\n\t\t\tif (element.isEqualNode(hiddenElements[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar parent = element.parentNode;\n\t\t\twhile (parent) {\n\t\t\t\tif (parent.isEqualNode(hiddenElements[i])) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction isMessageWanted(message) {\n\t\tif (options.ignore.indexOf(message.code.toLowerCase()) !== -1) {\n\t\t\treturn false;\n\t\t}\n\t\tif (options.ignore.indexOf(message.type) !== -1) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction reportError(message) {\n\t\tdone({\n\t\t\terror: message\n\t\t});\n\t}\n}\n/* eslint-enable max-statements, complexity */\n\n/* istanbul ignore next */\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = injectPa11y;\n}\n","/home/travis/build/npmtest/node-npmtest-pa11y/node_modules/pa11y/reporter/csv.js":"'use strict';\n\nmodule.exports = {\n\tbegin: emptyFunction,\n\terror: reportError,\n\tdebug: emptyFunction,\n\tinfo: emptyFunction,\n\tresults: reportResults,\n\tprocess: buildCsv\n};\n\nfunction emptyFunction() {}\n\nfunction reportError(message) {\n\tconsole.error(message);\n}\n\nfunction reportResults(results) {\n\tconsole.log(buildCsv(results));\n}\n\nfunction buildCsv(results) {\n\treturn ['\"type\",\"code\",\"message\",\"context\",\"selector\"']\n\t\t.concat(results.map(buildCsvRow))\n\t\t.join('\\n');\n}\n\nfunction buildCsvRow(result) {\n\treturn [\n\t\tJSON.stringify(result.type),\n\t\tJSON.stringify(result.code),\n\t\tJSON.stringify(result.message),\n\t\tJSON.stringify(result.context),\n\t\tJSON.stringify(result.selector)\n\t].join(',');\n}\n","/home/travis/build/npmtest/node-npmtest-pa11y/node_modules/pa11y/reporter/html.js":"'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\n\nmodule.exports = {\n\tbegin: emptyFunction,\n\terror: reportError,\n\tdebug: emptyFunction,\n\tinfo: emptyFunction,\n\tresults: reportResults,\n\tprocess: buildHtml\n};\n\nfunction emptyFunction() {}\n\nfunction reportError(message) {\n\tconsole.error(message);\n}\n\nfunction reportResults(results, url) {\n\tconsole.log(buildHtml(results, url));\n}\n\nfunction buildHtml(results, url) {\n\tvar renderMain = template(path.join(__dirname, '/html/report.html'));\n\treturn renderMain({\n\t\tdate: new Date(),\n\t\terrorCount: results.filter(isError).length,\n\t\twarningCount: results.filter(isWarning).length,\n\t\tnoticeCount: results.filter(isNotice).length,\n\t\tresults: buildResultsHtml(results),\n\t\turl: url\n\t});\n}\n\nfunction buildResultsHtml(results) {\n\tvar renderResult = template(path.join(__dirname, '/html/result.html'));\n\treturn results.map(function(result) {\n\t\tresult.typeLabel = upperCaseFirst(result.type);\n\t\treturn renderResult(result);\n\t}).join('');\n}\n\nfunction template(filePath) {\n\tvar content = fs.readFileSync(filePath, 'utf-8');\n\treturn function(context) {\n\t\tvar output = content;\n\t\tObject.keys(context).forEach(function(key) {\n\t\t\toutput = output.replace(new RegExp('\\\\{' + key + '\\\\}', 'g'), escapeHtml(context[key]));\n\t\t\toutput = output.replace(new RegExp('\\\\{' + key + '\\\\|raw\\\\}', 'g'), context[key]);\n\t\t});\n\t\treturn output.replace(/\\s+/g, ' ').trim();\n\t};\n}\n\nfunction upperCaseFirst(string) {\n\treturn string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction escapeHtml(html) {\n\treturn String(html)\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/\"/g, '&quot;')\n\t\t.replace(/'/g, '&#39;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;');\n}\n\nfunction isError(result) {\n\treturn (result.type === 'error');\n}\n\nfunction isNotice(result) {\n\treturn (result.type === 'notice');\n}\n\nfunction isWarning(result) {\n\treturn (result.type === 'warning');\n}\n","/home/travis/build/npmtest/node-npmtest-pa11y/node_modules/pa11y/reporter/json.js":"'use strict';\n\nvar bfj = require('bfj');\n\nmodule.exports = {\n\tbegin: emptyFunction,\n\terror: reportError,\n\tdebug: emptyFunction,\n\tinfo: emptyFunction,\n\tresults: reportResults,\n\tprocess: buildJson\n};\n\nfunction emptyFunction() {}\n\nfunction reportError(message) {\n\tconsole.error(message);\n}\n\nfunction reportResults(results) {\n\tvar stream = bfj.streamify(results);\n\tstream.on('dataError', function(error) {\n\t\treportError(error.message);\n\t});\n\tstream.on('end', function() {\n\t\tprocess.stdout.write('\\n');\n\t});\n\tstream.pipe(process.stdout);\n}\n\nfunction buildJson(results) {\n\treturn results;\n}\n","/home/travis/build/npmtest/node-npmtest-pa11y/node_modules/pa11y/reporter/markdown.js":"'use strict';\n\nvar typeStarts = {\n\terror: '__Error:__ ',\n\tnotice: '__Notice:__ ',\n\tunknown: '',\n\twarning: '__Warning:__ '\n};\n\nmodule.exports = {\n\tbegin: emptyFunction,\n\terror: reportError,\n\tdebug: emptyFunction,\n\tinfo: emptyFunction,\n\tresults: reportResults,\n\tprocess: buildMarkdown\n};\n\nfunction emptyFunction() {}\n\nfunction reportError(message) {\n\tconsole.error(message);\n}\n\nfunction reportResults(results, url) {\n\tconsole.log(buildMarkdown(results, url));\n}\n\nfunction buildMarkdown(results, url) {\n\tvar lines = [\n\t\t'# Welcome to Pa11y\\n',\n\t\t'## Results for ' + url + ':'\n\t];\n\tif (results.length === 0) {\n\t\tlines.push('\\n * No errors found!');\n\t} else {\n\t\tlines.push(buildResultsMarkdown(results));\n\t\tlines.push(buildTotalsMarkdown(results));\n\t}\n\treturn lines.join('\\n');\n}\n\nfunction buildResultsMarkdown(results) {\n\treturn results.map(buildResultMarkdown).join('');\n}\n\nfunction buildResultMarkdown(result) {\n\treturn [\n\t\t'* ' + typeStarts[result.type] + result.message,\n\t\t' * ' + result.code,\n\t\t' * ' + result.selector.replace(/\\s+/g, ' '),\n\t\t' * `' + result.context.replace(/\\s+/g, ' ') + '`'\n\t].join('\\n') + '\\n\\n';\n}\n\nfunction buildTotalsMarkdown(results) {\n\tvar totalErrors = results.filter(isError).length;\n\tvar totalNotices = results.filter(isNotice).length;\n\tvar totalWarnings = results.filter(isWarning).length;\n\n\treturn [\n\t\t'## Summary:',\n\t\t'* ' + totalErrors + ' Errors',\n\t\t'* ' + totalWarnings + ' Warnings',\n\t\t'* ' + totalNotices + ' Notices'\n\t].join('\\n') + '\\n';\n}\n\nfunction isError(result) {\n\treturn (result.type === 'error');\n}\n\nfunction isNotice(result) {\n\treturn (result.type === 'notice');\n}\n\nfunction isWarning(result) {\n\treturn (result.type === 'warning');\n}\n","/home/travis/build/npmtest/node-npmtest-pa11y/node_modules/pa11y/reporter/tsv.js":"'use strict';\n\nmodule.exports = {\n\tbegin: emptyFunction,\n\terror: reportError,\n\tdebug: emptyFunction,\n\tinfo: emptyFunction,\n\tresults: reportResults,\n\tprocess: buildTsv\n};\n\nfunction emptyFunction() {}\n\nfunction reportError(message) {\n\tconsole.error(message);\n}\n\nfunction reportResults(results) {\n\tconsole.log(buildTsv(results));\n}\n\nfunction buildTsv(results) {\n\treturn [['type', 'code', 'message', 'context', 'selector'].join('\\t')]\n\t\t.concat(results.map(buildTsvRow))\n\t\t.join('\\n');\n}\n\nfunction buildTsvRow(result) {\n\treturn [\n\t\tJSON.stringify(result.type),\n\t\tJSON.stringify(result.code),\n\t\tJSON.stringify(result.message),\n\t\tJSON.stringify(result.context),\n\t\tJSON.stringify(result.selector)\n\t].join('\\t');\n}\n"}